// –ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–∏—Å–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤

// —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
function createListOfAllProducts(store) {
    let totalStr = `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏—è—Ö üì¶:\n\n`;

    // —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    store.forEach((storeItem) => {
        let sizeDataStr = ``;
        storeItem.sizeData.forEach((sizeDataItem) => {
            sizeDataStr += `${sizeDataItem.size} - –∑–∞–∫–∞–∑–∞–ª–∏ - ${sizeDataItem.maxSpeedIn14d} —à—Ç. / –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ WB - ${sizeDataItem.leftInWbStock} —à—Ç. / –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ ${sizeDataItem.enoughForDays} –¥–Ω–µ–π\n`;
        });

        totalStr += `${storeItem.vendorCode} - ${storeItem.name}\n–¶–µ–Ω–∞: ${storeItem.price} —Ä.\n–†–∞–∑–º–µ—Ä—ã –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞ 14 –¥–Ω–µ–π: \n${sizeDataStr}\n`;
    });

    return totalStr;
}

// —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç–æ—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
function createListOfMissingProducts(store) {
    const limitQuantity = 14;
    let totalStr = `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∑–∏—Ü–∏—è—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∑–∞–∫–∞–∑–∞ üìâ:\n\n`;

    let missingProductsList = [];

    // –ø–µ—Ä–≤–∏—á–Ω–æ–µ –∑–∞–ø–æ–ª–µ–Ω–∏–µ missingProductList
    store.forEach((storeItem) => {
        missingProductsList.push({
            vendorCode: storeItem.vendorCode,
            name: storeItem.name,
            sizeType: storeItem.sizeType,
            price: storeItem.price,
            sizeData: [],
        });
    });

    // –≤—Ç–æ—Ä–∏—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ missingProductList —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–µ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
    missingProductsList.forEach((missingItem) => {
        store.forEach((storeItem) => {
            if (missingItem.vendorCode === storeItem.vendorCode) {
                storeItem.sizeData.forEach((storeSizeDataItem) => {
                    if (storeSizeDataItem.enoughForDays < limitQuantity) {
                        missingItem.sizeData.push(storeSizeDataItem);
                    }
                });
            }
        });
    });

    // —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ missingProductList —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
    missingProductsList = missingProductsList.filter((item) => {
        if (item.sizeData.length !== 0) {
            return item;
        }
    });

    // —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç + –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
    if (missingProductsList.length != 0) {
        missingProductsList.forEach((missingProductListItem) => {
            let sizeDataStr = ``;
            missingProductListItem.sizeData.forEach((sizeDataItem) => {
                sizeDataStr += `${sizeDataItem.size} - –∑–∞–∫–∞–∑–∞–ª–∏ - ${sizeDataItem.maxSpeedIn14d} —à—Ç. / –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ WB - ${sizeDataItem.leftInWbStock} —à—Ç. / –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ ${sizeDataItem.enoughForDays} –¥–Ω–µ–π\n`;
            });

            totalStr += `${missingProductListItem.vendorCode} - ${missingProductListItem.name}\n–¶–µ–Ω–∞: ${missingProductListItem.price} —Ä.\n–†–∞–∑–º–µ—Ä—ã –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞ 14 –¥–Ω–µ–π: \n${sizeDataStr}\n`;
        });
    } else {
        totalStr += "*–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç*";
    }

    return totalStr;
}

module.exports.createListOfAllProducts = createListOfAllProducts;
module.exports.createListOfMissingProducts = createListOfMissingProducts;
